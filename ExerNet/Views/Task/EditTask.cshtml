@using Exernet;
@model Exernet.Models.ExernetTaskViewModel
@{
    ViewBag.Title = "Create New Task";
}
@Scripts.Render("~/bundles/markdownjs")
@Styles.Render("~/Content/markdown")

<script src="~/Scripts/myJava.js"></script>

<h2>Edit Task</h2>



@using (Html.BeginForm("CreateTask", "Task", new { ReturnUrl = "/Home/Index" }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-lg-6">
            <form class="bs-component">

                <div class="form-group">
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                </div>

                <div class="form-group" hidden="">
                    @Html.TextBoxFor(m => m.Id, new { @class = "form-control" })
                </div>

                <div class="row">

                    <div class="col-md-9">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Tags, new { @class = "form-control", id = "tags" })
                        </div>
                    </div>
                    <div class="col-md-3" align="right">
                        <div class="form-group">
                            @Html.DropDownListFor(m => m.Category, new SelectList(
                                                new List<Object>{
                                                new{ value = Resources.Category.Math, text = Resources.Category.Math},
                                                new{ value = Resources.Category.Cult, text = Resources.Category.Cult},
                                                new{ value = Resources.Category.Geography, text = Resources.Category.Geography},
                                                new{ value = Resources.Category.Physics, text = Resources.Category.Physics},
                                                new{ value = Resources.Category.Chemistry, text = Resources.Category.Chemistry},
                                                new{ value = Resources.Category.WithoutCategory, text = Resources.Category.WithoutCategory}

                            }, "value", "text", Resources.Category.WithoutCategory), new { @class = "form-control" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    @Html.TextAreaFor(m => m.Text, new { data_provide = "markdown", rows = "10" })
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Answers, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label> @Resources.Resource.Expression</label>
                        @Html.TextBoxFor(m => m.Expression, new { @class = "form-control", id = "expression", placeholder = @Resources.Resource.Expression + "?" })
                        <div class="row">
                            <div class="col-md-4">
                                <label> @Resources.Resource.From</label>
                                @Html.TextBoxFor(m => m.From, new { @class = "form-control", id = "from" })
                            </div>
                            <div class="col-md-4">
                                <label> @Resources.Resource.To</label>
                                @Html.TextBoxFor(m => m.To, new { @class = "form-control", id = "to" })
                            </div>
                            <div class="col-md-4">
                                <label> @Resources.Resource.Step</label>
                                @Html.TextBoxFor(m => m.Step, new { @class = "form-control", id = "step" })
                            </div>
                        </div>
                        <br />
                        <button type="button" id="buildGraph" class="btn btn-primary">@Resources.Resource.Display</button>
                    </div>
                    <div class="col-md-6" id="chart1" style="height:200px;"></div>
                </div>
                

                <div class="form-group">
                    @foreach(var formula in Model.Formulas)
                    {
                    <div id="oldFormulas_@formula.Id" class="col-md-6 row">
                        <div class="col-md-10">
                            <img class="img-thumbnail img-responsive" src="@formula.FormulaURL">
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="X" class="btn btn-info btn-xs pull-left" onclick="deleteFormula('@formula.Id')">
                        </div>
                        <input type="hidden" name="Formulas" value="@formula.FormulaURL">
                    </div>
                    }
                    @{ Html.RenderPartial("Formula"); }
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Videos, new { @class = "form-control", placeholder = "Videos links like http://www.youtube.com/embed/WIH79zPH7L0, http://www.youtube.com/embed/WIH79zPH9k0 ?" })
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.Partial("_ShowImagesForEdit", Model.Images)
                    </div>
                </div>

                <div class="form-group">
                    <div class=" col-md-11">
                        <input type="submit" value="Submit" class="btn btn-success" />
                    </div>
                </div>

            </form>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jqPlot/jquery.jqplot.js" type="text/javascript"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.canvasTextRenderer.min.js" type="text/javascript"></script>
<script src="~/Scripts/jqPlot/plugins/jqplot.canvasAxisLabelRenderer.min.js" type="text/javascript"></script>
<script src="~/Scripts/parser.js" type="text/javascript"></script>
<script type="text/javascript" src="~/Scripts/build-graph.js"></script>
<script type="text/javascript" src="~/Scripts/build-graph2.js"></script>
<script type="text/javascript">
    function deleteFormula(formulaId)
    {
        $.ajax({
            url: "http://localhost:54084/Task/DeleteFormula",
            dataType: "json",
            type: "POST",
            data: { FormulaId: formulaId },
            success: function (data) {
                $("#oldFormulas_" + data).remove();
            }
        });
    }
</script>